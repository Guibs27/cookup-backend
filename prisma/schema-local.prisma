generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model recipes {
  id            Int       @id @default(autoincrement())
  recipe_image  String?   @db.VarChar(1000)
  title         String    @db.VarChar(255)
  ingredients   String    @db.Text
  step_by_step  String    @db.Text
  comment       String?   @db.Text
  category_id   Int
  category      categories @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "recipes_category_fk")
  user_id       Int
  user          user      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "recipes_user_fk")

  @@index([category_id], map: "category_id")
  @@index([user_id], map: "user_id")
}

model categories {
  id          Int       @id @default(autoincrement())
  name        String    @unique @db.VarChar(100) // Nome da categoria de prato/receita
  recipes     recipes[] // Relacionamento com a tabela recipes
}

model user {
  id         Int       @id @default(autoincrement())
  public_id  String    @unique @db.VarChar(256)
  name       String    @db.VarChar(100)
  email      String    @unique @db.VarChar(200)
  pass       String    @db.VarChar(256)
  avatar     String?   @db.VarChar(1000)
  birth_date DateTime? @db.Date
  recipes    recipes[] // Relacionamento com a tabela recipes
  session    session[] 
}

model session {
  id         Int      @id @default(autoincrement())
  token      String   @unique @db.VarChar(700)
  user_id    Int
  updated_at DateTime @updatedAt
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id], map: "session_user_id_fkey")
}